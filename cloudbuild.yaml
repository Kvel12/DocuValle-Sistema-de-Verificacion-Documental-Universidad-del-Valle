# cloudbuild.yaml FINAL CORREGIDO - DocuValle

steps:
  # PASO 1: Instalar dependencias del backend
  - name: 'node:18'
    entrypoint: 'npm'
    args: ['ci']
    dir: 'backend'
    id: 'install-backend-deps'

  # PASO 2: Compilar el backend TypeScript a JavaScript
  - name: 'node:18'
    entrypoint: 'npm'
    args: ['run', 'build']
    dir: 'backend'
    id: 'build-backend'
    waitFor: ['install-backend-deps']

  # PASO 3: Construir la imagen Docker del backend
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/docuvalle-backend/backend:latest',
      './backend'
    ]
    id: 'build-docker-image'
    waitFor: ['build-backend']

  # PASO 4: Subir la imagen a Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/docuvalle-backend/backend:latest']
    id: 'push-docker-image'
    waitFor: ['build-docker-image']

  # PASO 5: Desplegar backend a Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'run', 'deploy', 'docuvalle-backend',
      '--image', 'us-central1-docker.pkg.dev/$PROJECT_ID/docuvalle-backend/backend:latest',
      '--region', 'us-central1',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--port', '8080',
      '--memory', '1Gi',
      '--cpu', '1',
      '--min-instances', '0',
      '--max-instances', '10',
      '--timeout', '300',
      '--cpu-boost'
    ]
    id: 'deploy-backend'
    waitFor: ['push-docker-image']

  # PASO 6: Instalar dependencias del frontend
  - name: 'node:18'
    entrypoint: 'npm'
    args: ['ci']
    dir: 'frontend'
    id: 'install-frontend-deps'

  # PASO 7: Construir el frontend con URL CORRECTA
  - name: 'node:18'
    entrypoint: 'npm'
    args: ['run', 'build']
    dir: 'frontend'
    id: 'build-frontend'
    waitFor: ['install-frontend-deps']
    env:
      - 'REACT_APP_API_URL=https://docuvalle-backend-166554040569.us-central1.run.app'
      - 'REACT_APP_PROJECT_ID=$PROJECT_ID'

  # PASO 8: Desplegar frontend a Firebase Hosting - VERSI√ìN CORREGIDA
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üîß Iniciando deployment del frontend..."
        
        # Instalar Firebase CLI
        npm install -g firebase-tools
        
        # Verificar que el build del frontend existe
        if [ ! -d "frontend/build" ]; then
          echo "‚ùå Error: directorio frontend/build no encontrado"
          ls -la frontend/
          exit 1
        fi
        
        echo "‚úÖ Frontend build encontrado, archivos:"
        ls -la frontend/build/
        
        # Desplegar a Firebase Hosting con token
        firebase deploy --only hosting --project $PROJECT_ID --token "1//05XosnWZntJhpCgYIARAAGAUSNwF-L9IrUM4LZz47t2CT4qNKEISY6-qGkYZJXylGbZkorJQ4xiOGl6RWBrsrNCngoCRaZULL5bM"
        
        echo "üéâ Frontend desplegado exitosamente a https://$PROJECT_ID.web.app"
    id: 'deploy-frontend'
    waitFor: ['build-frontend']

# Configuraci√≥n adicional
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

timeout: '1200s'
